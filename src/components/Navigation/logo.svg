<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="40mm"
   height="10mm"
   viewBox="0 0 169.61696 51.089466"
   version="1.1"
   id="svg102"
   inkscape:version="1.1 (c68e22c387, 2021-05-23)"
   sodipodi:docname="dibujo.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview104"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:document-units="mm"
     showgrid="false"
     inkscape:zoom="0.54929738"
     inkscape:cx="202.98659"
     inkscape:cy="75.551062"
     inkscape:window-width="1920"
     inkscape:window-height="1057"
     inkscape:window-x="-8"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1"
     fit-margin-top="0"
     fit-margin-left="0"
     fit-margin-right="0"
     fit-margin-bottom="0" />
  <defs
     id="defs99">
    <inkscape:path-effect
       effect="perspective-envelope"
       up_left_point="5.6026235,180.92461"
       up_right_point="190.75029,180.92461"
       down_left_point="5.6026235,259.2707"
       down_right_point="190.75029,259.2707"
       id="path-effect29303"
       is_visible="true"
       lpeversion="1"
       deform_type="envelope_deformation"
       horizontal_mirror="false"
       vertical_mirror="true"
       overflow_perspective="false" />
    <inkscape:path-effect
       effect="interpolate_points"
       id="path-effect29301"
       is_visible="true"
       lpeversion="1"
       interpolator_type="CentripetalCatmullRom" />
    <marker
       style="overflow:visible"
       id="Arrow1Lend"
       refX="0"
       refY="0"
       orient="auto"
       inkscape:stockid="Arrow1Lend"
       inkscape:isstock="true">
      <path
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:context-stroke;fill-rule:evenodd;stroke:context-stroke;stroke-width:1pt"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path6219" />
    </marker>
    <hatch
       inkscape:collect="always"
       id="hatch10"
       hatchUnits="userSpaceOnUse"
       pitch="15"
       x="-5"
       y="-10"
       rotate="30">
      <hatchpath
         stroke="#000000"
         offset="10"
         d="L 0,0 5,10 0,20"
         id="hatchpath59" />
    </hatch>
    <filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter28985"
       x="-0.087272797"
       y="-0.20624328"
       width="1.1745456"
       height="1.4124866">
      <feGaussianBlur
         inkscape:collect="always"
         stdDeviation="6.7326481"
         id="feGaussianBlur28987" />
    </filter>
  </defs>
  <g
     inkscape:label="Capa 1"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(-26.225917,-86.511451)">
    <path
       sodipodi:type="spiral"
       style="fill:none;fill-rule:evenodd;stroke:#000000"
       id="path29121"
       sodipodi:cx="514.9173"
       sodipodi:cy="200.81773"
       sodipodi:expansion="1"
       sodipodi:revolution="3"
       sodipodi:radius="74.84034"
       sodipodi:argument="-19.313204"
       sodipodi:t0="0"
       d="m 514.9173,200.81773 c 3.35622,-1.67811 3.91791,3.69621 2.78913,5.57827 -3.0589,5.10028 -10.40901,3.63406 -13.94567,1e-5 -6.32626,-6.50048 -3.80043,-17.06289 2.78913,-22.31308 9.67043,-7.70487 23.81853,-4.00354 30.68048,5.57826 9.1459,12.77103 4.22422,30.61181 -8.36739,39.04789 -15.84526,10.61595 -37.42339,4.45437 -47.4153,-11.15653 -12.10154,-18.90689 -4.69008,-44.24534 13.94566,-55.7827 21.96158,-13.59637 51.07379,-4.92929 64.15011,16.73479 15.09712,25.01205 5.17084,57.90657 -19.52393,72.51751 -28.05976,16.60189 -64.74237,5.41402 -80.88491,-22.31305 -18.10949,-31.10559 -5.65838,-71.5804 25.10219,-89.25232 34.15006,-19.61919 78.42008,-5.90362 97.61972,27.89132"
       transform="matrix(0.26458333,0,0,0.26458333,37.219978,62.45236)" />
    <path
       sodipodi:type="spiral"
       style="fill:none;fill-rule:evenodd;stroke:#000000"
       id="path29014"
       sodipodi:cx="205.96692"
       sodipodi:cy="205.96692"
       sodipodi:expansion="1"
       sodipodi:revolution="3"
       sodipodi:radius="57.856632"
       sodipodi:argument="-18.485577"
       sodipodi:t0="0"
       d="m 205.96692,205.96692 c 2.7108,1.03269 -0.0546,4.16359 -1.71639,4.50552 -4.50328,0.92662 -7.51333,-4.02424 -7.29466,-7.93831 0.39115,-7.00135 7.72481,-11.08852 14.16023,-10.08379 9.44422,1.47448 14.73785,11.4641 12.87292,20.38215 -2.48566,11.88636 -15.2156,18.41688 -26.60406,15.66206 -14.33122,-3.46666 -22.11087,-18.97258 -18.45119,-32.82599 4.43235,-16.77832 22.73255,-25.81344 39.0479,-21.24032 19.22706,5.38927 29.52141,26.49439 24.02945,45.26982 -6.34068,21.67697 -30.25747,33.23297 -51.49173,26.81859 -24.12772,-7.28843 -36.94706,-34.02143 -29.60773,-57.71366 8.23362,-26.57909 37.78603,-40.66295 63.93558,-32.39685 29.03095,9.17694 44.38023,41.55111 35.18599,70.15749"
       transform="matrix(0.26458333,0,0,0.26458333,-8.1743123,52.111235)" />
    <g
       id="rect3529"
       transform="translate(0,-104.90367)"
       style="mix-blend-mode:normal;stroke:none;paint-order:fill markers stroke;filter:url(#filter28985)"
       inkscape:path-effect="#path-effect29301;#path-effect29303">
      <path
         style="color:#000000;fill:#000000;stroke:none;stroke-linejoin:bevel;-inkscape-stroke:none;paint-order:fill markers stroke"
         d="m 31.437321,189.53869 c -0.127344,0.1429 -0.542634,0.25712 -0.764064,0.85742 -1.474297,3.99682 -1.474297,49.81764 0,53.81446 0.22143,0.6003 0.197267,0.59378 0.764064,0.85742 6.740013,3.135 145.888489,3.13692 152.621819,0 0.56592,-0.26365 0.54139,-0.25748 0.76234,-0.85742 1.4719,-3.99673 1.4719,-49.81773 0,-53.81446 -0.22095,-0.59994 -0.19642,-0.59377 -0.76234,-0.85742 -6.73333,-3.13692 -127.184848,0 -152.621819,0 m 0.762328,1.71485 c 25.182861,0 133.148391,-20.18774 151.097171,0 9.93796,11.17764 9.93796,40.92197 0,52.09961 -17.94878,20.18774 -133.148397,20.18774 -151.097171,0 -9.937965,-11.17764 0,-43.41634 0,-52.09961"
         id="path3919"
         inkscape:original-d="m 23.112157,199.23183 -0.859375,0.85742 v 53.81446 l 0.859375,0.85742 H 194.77231 l 0.85743,-0.85742 v -53.81446 l -0.85743,-0.85742 z m 0.857422,1.71485 H 193.91489 v 52.09961 H 23.969579 Z" />
      <path
         style="color:#000000;fill:url(#hatch10);fill-opacity:0.248996;stroke:none;stroke-width:1.715;stroke-linejoin:bevel;-inkscape-stroke:none;paint-order:fill markers stroke"
         d="m 10.146666,190.05275 c 25.437031,0 134.361724,-20.53831 152.622184,0 10.22411,11.49948 10.22411,42.31474 0,53.81422 -18.26046,20.53831 -134.361717,20.53831 -152.622184,0 -10.22410204,-11.49948 0,-44.84518 0,-53.81422"
         id="path3921"
         inkscape:original-d="M -0.83433485,199.74589 H 170.82623 v 53.81422 H -0.83433485 Z" />
    </g>
    <path
       style="fill:none;fill-opacity:0.248996;stroke:none;stroke-width:16.6882;stroke-linejoin:bevel;stroke-opacity:1;paint-order:stroke fill markers"
       d="m 99.214733,438.32334 0.09316,-45.69891 13.423417,-9.05643 13.42342,-9.05643 1.2873,-19.52535 c 1.86136,-28.23264 1.5169,-28.01375 44.08321,-28.01375 42.72096,0 44.50029,1.84362 17.81193,18.45549 -17.40114,10.83114 -17.92007,11.45698 -18.02211,21.73491 -0.0578,5.82046 -0.80881,15.71708 -1.66895,21.99249 -1.48083,10.80379 -2.50645,11.99389 -19.3094,22.40596 l -17.74551,10.99612 v 20.33813 20.33812 l -15.30625,10.39428 c -8.41844,5.71685 -15.94911,10.39428 -16.73481,10.39428 -0.785708,0 -1.386639,-20.56451 -1.335403,-45.69891 z"
       id="path6584"
       transform="scale(0.26458333)" />
    <path
       style="fill:#3400fe;fill-opacity:0.248996;stroke:none;stroke-width:16.6882;stroke-linejoin:bevel;stroke-opacity:1;paint-order:stroke fill markers"
       d="m 99.214733,438.32334 0.09316,-45.69891 13.423417,-9.05643 13.42342,-9.05643 1.2873,-19.52535 c 1.86136,-28.23264 1.5169,-28.01375 44.08321,-28.01375 42.72096,0 44.50029,1.84362 17.81193,18.45549 -17.40114,10.83114 -17.92007,11.45698 -18.02211,21.73491 -0.0578,5.82046 -0.80881,15.71708 -1.66895,21.99249 -1.48083,10.80379 -2.50645,11.99389 -19.3094,22.40596 l -17.74551,10.99612 v 20.33813 20.33812 l -15.30625,10.39428 c -8.41844,5.71685 -15.94911,10.39428 -16.73481,10.39428 -0.785708,0 -1.386639,-20.56451 -1.335403,-45.69891 z"
       id="path6623"
       transform="scale(0.26458333)" />
    <path
       style="fill:#3411fe;fill-opacity:0.228916;stroke:none;stroke-width:16.6882;stroke-linejoin:bevel;stroke-opacity:1;paint-order:stroke fill markers"
       d="m 236.49675,510.41176 c 0.8777,-5.31009 1.62096,-13.70968 1.65168,-18.66576 0.0515,-8.3106 1.45248,-9.91163 18.02292,-20.59669 17.8342,-11.49997 17.96747,-11.6713 18.02291,-23.17127 0.13051,-27.06765 1.8119,-30.50605 20.98168,-42.90692 l 17.63631,-11.40887 v -20.33978 -20.33979 l 19.35907,-13.0051 c 19.23271,-12.92021 19.4932,-13.00511 39.90609,-13.00511 h 20.54702 v 12.85242 12.85241 l -17.73305,11.79168 -17.73304,11.79168 -1.78771,21.46127 -1.78772,21.46128 -17.81074,11.84334 -17.81075,11.84335 v 13.81788 c 0,24.65772 -1.45315,27.61109 -19.45721,39.54457 -10.65733,7.0639 -17.05169,13.20352 -18.09953,17.37846 -1.57101,6.2594 -2.28728,6.45565 -23.56201,6.45565 h -21.94174 z"
       id="path7032"
       transform="scale(0.26458333)" />
    <path
       style="fill:#ccbafe;fill-opacity:0.285141;stroke:none;stroke-width:16.6882;stroke-linejoin:bevel;stroke-opacity:1;paint-order:stroke fill markers"
       d="m 373.18619,496.8928 2.70343,-23.17366 17.37845,-11.63749 17.37846,-11.63749 0.0352,-16.03693 c 0.0193,-8.82032 0.66872,-18.35407 1.44308,-21.18611 0.77435,-2.83205 8.70321,-9.97081 17.61967,-15.86391 17.71487,-11.70818 19.47915,-15.35584 19.56715,-40.45517 0.0455,-12.96774 0.26642,-13.33871 12.84302,-21.56216 12.38457,-8.09788 13.66852,-8.36741 39.85984,-8.36741 h 27.06306 v 8.78027 c 0,7.9947 -1.47855,9.71405 -16.52599,19.21737 -9.0893,5.74041 -17.31394,11.71202 -18.27698,13.27026 -0.96304,1.55823 -2.36571,11.8018 -3.11704,22.7635 l -1.36605,19.93035 -17.68848,10.96078 c -16.83842,10.43405 -17.68847,11.43061 -17.68847,20.73716 0,5.37701 -0.72691,15.0798 -1.61537,21.56177 -1.52681,11.13929 -2.58541,12.43043 -19.30939,23.55114 -16.95589,11.2749 -17.69403,12.19449 -17.69403,22.04356 v 10.27783 h -22.65647 -22.65647 z"
       id="path7811"
       transform="scale(0.26458333)" />
    <path
       style="fill:#cc47fe;fill-opacity:0.228916;stroke:none;stroke-width:16.6882;stroke-linejoin:bevel;stroke-opacity:1;paint-order:stroke fill markers"
       d="m 498.49292,513.79484 c 9.06502,-6.15983 9.2554,-6.64917 10.68142,-27.45437 0.93605,-13.6567 2.67155,-21.88027 4.88471,-23.14596 1.88805,-1.07976 9.80492,-6.43202 17.59304,-11.89391 l 14.16023,-9.93071 0.74338,-20.51085 0.74338,-20.51085 17.62639,-11.47092 c 17.24442,-11.22233 17.66023,-11.75238 19.18729,-24.45857 0.85849,-7.14321 1.57096,-16.68729 1.58327,-21.20907 0.038,-13.95468 6.42126,-16.23716 45.40947,-16.23716 32.38545,0 33.88278,0.23038 32.63014,5.02048 -0.72209,2.76127 -8.60359,9.77056 -17.51445,15.57622 -17.80755,11.60207 -19.22226,14.36168 -19.27424,37.59741 l -0.0352,15.71343 -17.77924,11.8224 -17.77925,11.8224 -1.78857,21.47157 -1.78857,21.47156 -17.73616,11.49538 -17.73616,11.49539 -0.0275,14.80387 -0.0275,14.80388 h -31.4927 -31.49269 z"
       id="path8553"
       transform="scale(0.26458333)" />
    <path
       style="fill:#054743;fill-opacity:0.196787;stroke:none;stroke-width:16.6882;stroke-linejoin:bevel;stroke-opacity:1;paint-order:stroke fill markers"
       d="m 101.69616,506.28396 v -13.78249 l 17.77925,-11.8224 17.77924,-11.8224 1.81143,-21.38131 1.81142,-21.38131 17.09719,-11.58564 17.09719,-11.58564 1.37706,-19.30939 c 0.75739,-10.62017 2.18817,-20.61879 3.17952,-22.21914 0.99135,-1.60036 8.72821,-7.39318 17.19304,-12.87294 9.03957,-5.85182 15.69565,-12.08802 16.12987,-15.11236 0.66624,-4.64027 2.99813,-5.22316 23.59467,-5.89784 22.71564,-0.74408 22.84571,-0.7126 21.2755,5.14918 -0.86894,3.24381 -1.5957,11.23103 -1.61504,17.74939 -0.035,11.8044 -0.10684,11.89922 -18.05726,23.83544 -17.12055,11.3844 -18.0221,12.48006 -18.0221,21.90238 0,5.45517 -0.7042,15.0562 -1.56489,21.33562 -1.45212,10.59431 -2.70456,12.14583 -17.37846,21.5282 -8.69746,5.56109 -16.66475,11.3018 -17.70508,12.75713 -1.04034,1.45533 -1.92062,11.33529 -1.95619,21.95546 l -0.0647,19.3094 -17.99686,11.47374 c -9.89827,6.31056 -17.99686,12.39302 -17.99686,13.51658 0,1.12356 -9.84779,2.04284 -21.88398,2.04284 h -21.88399 z"
       id="path9371"
       transform="scale(0.26458333)" />
    <path
       style="fill:#0547cf;fill-opacity:0.329317;stroke:none;stroke-width:16.6882;stroke-linejoin:bevel;stroke-opacity:1;paint-order:stroke fill markers"
       d="m 99.121577,355.3698 v -28.39733 h 11.585643 c 13.15965,0 13.13044,-0.0877 9.98605,29.99618 -1.50893,14.4367 -2.1655,15.62969 -11.58564,21.05123 l -9.986053,5.74725 z"
       id="path9854"
       transform="scale(0.26458333)" />
    <path
       style="fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:16.6882;stroke-linejoin:bevel;stroke-opacity:1;paint-order:stroke fill markers"
       d="m 100.74304,453.00874 c -0.952718,-15.68636 -0.97001,-35.96023 -0.0384,-45.05305 1.66806,-16.28123 1.87906,-16.6513 13.88824,-24.35757 l 12.19445,-7.82515 1.77575,-20.35683 c 0.97667,-11.19625 3.15146,-21.44611 4.83289,-22.77747 7.47347,-5.91753 71.28367,-6.35326 71.28367,-0.48677 0,1.06674 -7.41947,6.7735 -16.48772,12.68169 l -16.48771,10.74217 -1.77739,18.52433 c -2.17892,22.70928 -5.0397,27.44349 -23.11745,38.25626 l -14.21815,8.50424 -0.0319,20.63884 c -0.0316,20.43639 -0.11365,20.69134 -8.36741,25.99198 -4.58454,2.94423 -11.34629,7.30723 -15.0261,9.69556 l -6.69055,4.34241 z"
       id="path10263"
       transform="scale(0.26458333)" />
    <g
       aria-label="SAMERY "
       transform="scale(0.97599607,1.0245943)"
       id="text16733"
       style="font-size:32.9038px;line-height:1.55;letter-spacing:0.00342748px;fill:#ff5f00;stroke-width:0.342748">
      <path
         d="m 44.161813,112.61466 q 0.546254,0.1928 1.108575,0.44986 0.578387,0.25706 1.188907,0.49806 0.61052,0.22492 1.269238,0.38559 0.674785,0.16066 1.429902,0.16066 0.883647,0 1.78336,-0.20886 0.899713,-0.20886 1.751228,-0.61052 0.86758,-0.41773 1.65483,-0.99611 0.787249,-0.59446 1.445967,-1.36564 0.722984,-0.81938 1.204974,-1.4781 0.481989,-0.67478 0.771182,-1.18891 0.30526,-0.53018 0.433791,-0.89971 0.12853,-0.38559 0.12853,-0.65872 0,-0.40166 -0.273127,-0.69085 -0.273127,-0.30526 -0.73905,-0.49806 -0.449857,-0.19279 -1.028244,-0.27312 -0.578387,-0.0964 -1.204973,-0.0964 -0.369525,0 -0.867581,0.0321 -0.498055,0.0161 -1.012177,0.0482 -0.514122,0.0161 -0.996111,0.0321 -0.48199,0.0161 -0.835449,0.0161 -0.530188,0 -1.108575,-0.11246 -0.562321,-0.12853 -1.108575,-0.40166 -0.546255,-0.27313 -1.012178,-0.73905 -0.465923,-0.46592 -0.771183,-1.15678 -0.0964,-0.22492 -0.176729,-0.53018 -0.08033,-0.30526 -0.08033,-0.65872 0,-0.38559 0.0482,-0.72299 0.06427,-0.35346 0.144597,-0.67478 0.224929,-0.803317 0.73905,-1.622696 0.530189,-0.83545 1.253173,-1.622702 0.73905,-0.78725 1.590564,-1.526299 0.867581,-0.73905 1.767294,-1.381702 0.91578,-0.658719 1.78336,-1.172841 0.883647,-0.530188 1.638764,-0.899713 1.060376,-0.514122 2.152885,-0.73905 1.108576,-0.240995 2.185018,-0.240995 0.642653,0 1.22104,0.176729 0.578387,0.160663 1.012177,0.48199 0.449857,0.321326 0.706918,0.803315 0.257061,0.465923 0.257061,1.076443 0,0.353459 -0.08033,0.594453 -0.08033,0.240995 -0.208862,0.401658 -0.12853,0.144597 -0.289193,0.208862 -0.144597,0.06427 -0.30526,0.06427 -0.43379,0 -0.803316,-0.0964 -0.353458,-0.0964 -0.690851,-0.208862 -0.337392,-0.12853 -0.674785,-0.224928 -0.337392,-0.112464 -0.73905,-0.112464 -1.188907,0 -2.426013,0.481989 -1.221039,0.465923 -2.39388,1.204973 -1.156774,0.722982 -2.201084,1.622702 -1.028244,0.899712 -1.847626,1.751221 -0.43379,0.44986 -0.642652,0.899717 -0.192796,0.44985 -0.192796,0.85151 0,0.59445 0.514122,0.93185 0.514122,0.33739 1.253172,0.33739 0.433791,0 0.980045,-0.0161 0.546255,-0.0161 1.108576,-0.0321 0.578387,-0.0321 1.108575,-0.0482 0.546254,-0.0321 0.963978,-0.0321 0.996112,0 1.911891,0.28919 0.91578,0.27313 1.622697,0.81938 0.706918,0.54626 1.124642,1.36564 0.43379,0.80332 0.43379,1.84763 0,0.64265 -0.192795,1.30137 -0.192796,0.65872 -0.530189,1.3335 -0.337392,0.65872 -0.771182,1.31744 -0.433791,0.64265 -0.91578,1.26924 -0.867581,1.12464 -1.944023,2.12075 -1.060377,0.99611 -2.26535,1.73516 -1.204973,0.73905 -2.554543,1.17284 -1.333504,0.43379 -2.747339,0.43379 -0.61052,0 -1.253172,-0.11246 -0.642652,-0.11247 -1.269239,-0.3374 -0.626586,-0.20886 -1.188906,-0.53018 -0.546255,-0.3374 -0.963979,-0.75512 -0.417724,-0.41772 -0.674785,-0.91578 -0.240995,-0.51412 -0.240995,-1.10857 0,-0.2892 0.08033,-0.54626 0.0964,-0.27313 0.449857,-0.27313 z m 8.161685,-19.809757 z"
         style="font-family:'MV Boli';-inkscape-font-specification:'MV Boli'"
         id="path30724" />
      <path
         d="m 77.397119,118.43715 q -0.337392,0 -0.594453,-0.12853 -0.257061,-0.12853 -0.433791,-0.33739 -0.160663,-0.20886 -0.257061,-0.48199 -0.08033,-0.27313 -0.08033,-0.54626 0,-0.24099 0.12853,-0.65872 0.128531,-0.43379 0.321326,-0.96397 0.208862,-0.53019 0.449857,-1.10858 0.240995,-0.57839 0.465923,-1.10857 0.224928,-0.53019 0.385591,-0.98005 0.160664,-0.44986 0.224929,-0.70692 0.06426,-0.28919 0.160663,-0.69085 0.0964,-0.40166 0.208862,-0.86758 0.12853,-0.48199 0.240995,-0.99611 0.12853,-0.53019 0.25706,-1.06038 -0.224928,0.0482 -0.56232,0.0964 -0.321327,0.0321 -0.690852,0.0643 -0.530188,0.0482 -1.04431,0.14459 -0.514122,0.0964 -1.060376,0.22493 -0.530188,0.11247 -1.108575,0.25706 -0.578388,0.12853 -1.237106,0.27313 -0.963979,0.20886 -1.927957,0.46592 -0.963979,0.25706 -2.008289,0.25706 -0.321326,0 -0.594453,-0.16066 -0.273128,-0.17673 -0.61052,-0.25706 -0.321326,0.51412 -0.61052,1.10858 -0.289193,0.57838 -0.530188,1.20497 -0.240995,0.61052 -0.43379,1.22104 -0.192796,0.59445 -0.337393,1.12464 -0.08033,0.28919 -0.144597,0.75512 -0.0482,0.44985 -0.0964,0.93184 -0.0482,0.46592 -0.0964,0.89972 -0.0482,0.43379 -0.0964,0.69085 -0.0482,0.24099 -0.192796,0.48199 -0.144597,0.22492 -0.353459,0.41772 -0.208862,0.1928 -0.465923,0.30526 -0.257061,0.12853 -0.514122,0.12853 -0.449856,0 -0.73905,-0.25706 -0.273127,-0.27313 -0.449856,-0.65872 -0.160664,-0.40166 -0.224929,-0.86758 -0.06427,-0.46592 -0.06427,-0.85151 0,-0.98005 0.240995,-2.02436 0.240994,-1.06038 0.642652,-2.13682 0.417724,-1.09251 0.963978,-2.18502 0.562321,-1.10857 1.204974,-2.20108 0.530188,-0.98005 1.317437,-2.26535 0.787249,-1.28531 1.751228,-2.63488 0.980045,-1.36563 2.104686,-2.667003 1.140708,-1.30137 2.361748,-2.31356 1.221039,-1.028245 2.506344,-1.654831 1.285305,-0.626586 2.554543,-0.626586 1.333504,0 2.217151,0.481989 0.899713,0.48199 1.429901,1.301368 0.530188,0.81939 0.73905,1.9119 0.224929,1.09251 0.224929,2.313553 0,1.07645 -0.144597,2.21715 -0.128531,1.14071 -0.337393,2.23322 -0.192795,1.09251 -0.43379,2.10469 -0.224928,1.01217 -0.417724,1.83156 l -0.562321,2.18501 q -0.03213,0.0964 -0.12853,0.3856 -0.08033,0.28919 -0.224929,0.70691 -0.12853,0.40166 -0.305259,0.88365 -0.160664,0.46592 -0.337393,0.93185 -0.160663,0.44985 -0.321326,0.83544 -0.144597,0.3856 -0.257061,0.62659 l 0.01607,-0.0161 q -0.112464,0.41773 -0.240994,0.85152 -0.128531,0.43379 -0.353459,0.78725 -0.224929,0.33739 -0.578387,0.56232 -0.353459,0.20886 -0.91578,0.20886 z m 0.819382,-20.115023 q -0.722984,0 -1.445968,0.30526 -0.706918,0.28919 -1.397769,0.77118 -0.690851,0.48199 -1.34957,1.124653 -0.642652,0.64265 -1.237106,1.31743 -0.578387,0.67479 -1.092509,1.36564 -0.514122,0.67478 -0.931846,1.25317 -0.06427,0.0964 -0.176729,0.25706 -0.0964,0.1446 -0.208862,0.33739 -0.0964,0.17673 -0.192796,0.3856 -0.0964,0.19279 -0.160663,0.35345 h 1.65483 q 0.899713,0 2.056488,-0.12853 1.156774,-0.12853 2.281415,-0.30526 1.140708,-0.17672 2.088621,-0.35345 0.947912,-0.1928 1.429901,-0.2892 0.06427,-0.20886 0.112464,-0.56232 0.06427,-0.35346 0.112464,-0.78725 0.0482,-0.43379 0.06427,-0.91578 0.03213,-0.49805 0.03213,-1.01217 0,-0.41773 -0.03213,-0.94792 -0.03213,-0.546253 -0.192796,-1.028243 -0.160663,-0.48199 -0.498056,-0.80332 -0.321326,-0.33739 -0.915779,-0.33739 z"
         style="font-family:'MV Boli';-inkscape-font-specification:'MV Boli'"
         id="path30726" />
      <path
         d="m 88.897849,116.80962 q 0.30526,-1.22104 0.851515,-2.71521 0.546254,-1.49417 1.253172,-3.11686 0.722984,-1.6227 1.574498,-3.2936 0.867581,-1.67089 1.78336,-3.24539 0.931846,-1.59057 1.895825,-2.98834 0.980045,-1.41383 1.927957,-2.522403 0.273127,-0.305261 0.674789,-0.755109 0.41772,-0.449862 0.91578,-0.931852 0.514105,-0.481984 1.060355,-0.947907 0.56233,-0.481989 1.12465,-0.851514 0.56231,-0.385592 1.09251,-0.61052 0.53019,-0.240995 0.98004,-0.240995 0.61052,0 1.10858,0.208862 0.51412,0.208862 0.86758,0.594454 0.36952,0.385591 0.56232,0.931846 0.20886,0.530188 0.20886,1.172834 0,0.27313 -0.0482,0.54626 -0.0321,0.273122 -0.0964,0.56232 l -1.78336,8.964994 q 0.241,-0.36953 0.67479,-0.99611 0.43379,-0.64266 0.98004,-1.41384 0.54626,-0.78725 1.14071,-1.6227 0.59446,-0.85151 1.15678,-1.63876 0.57838,-0.78725 1.06037,-1.4299 0.48199,-0.658713 0.78725,-1.060373 l 0.2892,-0.36952 q 0.28919,-0.369531 0.70691,-0.867579 0.41773,-0.498062 0.91578,-1.044312 0.51412,-0.546254 1.07645,-1.076442 0.56232,-0.530188 1.1407,-0.947912 0.57839,-0.417724 1.14071,-0.674785 0.56232,-0.273127 1.07644,-0.273127 0.3856,0 0.64266,0.176729 0.25706,0.17673 0.41772,0.481989 0.16066,0.289194 0.22493,0.690852 0.0643,0.401657 0.0643,0.835448 0,0.674788 -0.11246,1.365628 -0.11246,0.690862 -0.25706,1.253181 -0.0803,0.44985 -0.22493,1.285293 -0.12853,0.83545 -0.32133,1.92796 -0.17673,1.07644 -0.38559,2.34568 -0.20886,1.25317 -0.43379,2.55454 -0.20886,1.30137 -0.43379,2.57061 -0.20886,1.26924 -0.40166,2.37782 -0.17673,1.0925 -0.33739,1.96009 -0.1446,0.86758 -0.24099,1.34957 -0.0482,0.22492 -0.16067,0.61051 -0.0964,0.3856 -0.30526,0.75512 -0.19279,0.36953 -0.53018,0.64265 -0.32133,0.27313 -0.80332,0.27313 -0.25706,0 -0.49806,-0.16066 -0.22492,-0.17673 -0.41772,-0.43379 -0.17673,-0.25706 -0.28919,-0.54626 -0.0964,-0.30526 -0.11247,-0.54625 l 3.3418,-15.87351 q 0.0482,-0.224925 0.0803,-0.401653 0.0321,-0.17673 0.0321,-0.33739 0,-0.17673 -0.0482,-0.32133 -0.0321,-0.1446 -0.0643,-0.273131 -0.0482,-0.1446 -0.0964,-0.257058 -0.72299,0.546259 -1.55843,1.397767 -0.81939,0.835445 -1.6709,1.879755 -0.83545,1.02824 -1.68696,2.20108 -0.83545,1.15678 -1.59057,2.32962 -0.59445,0.91578 -1.2853,1.92795 -0.67479,1.01218 -1.36564,2.04043 -0.69085,1.01217 -1.34957,2.04042 -0.64265,1.01217 -1.17284,1.94402 -0.25706,0.44986 -0.53019,1.15677 -0.27312,0.70692 -0.61053,1.38171 -0.32131,0.67478 -0.7069,1.15677 -0.36953,0.48199 -0.85152,0.48199 -0.36953,0 -0.62659,-0.11246 -0.24097,-0.11247 -0.385575,-0.2892 -0.1446,-0.19279 -0.20886,-0.43379 -0.0643,-0.25706 -0.0643,-0.54625 0,-0.36953 0.0643,-0.73905 0.0803,-0.36953 0.16066,-0.70692 0.337375,-1.41384 0.706905,-2.8116 0.36952,-1.39777 0.75512,-2.85981 0.40166,-1.46203 0.81938,-3.02046 0.41771,-1.5745 0.85151,-3.3418 0.11247,-0.49805 0.25707,-1.10857 0.14459,-0.62659 0.27312,-1.25317 0.12853,-0.64266 0.20887,-1.237103 0.0803,-0.59445 0.0803,-1.06038 0,-0.417719 -0.0643,-0.658709 -0.0643,-0.257063 -0.24099,-0.257063 -0.59446,0 -1.25317,0.449853 -0.65872,0.433789 -1.33351,1.156779 -0.67479,0.722973 -1.333495,1.654823 -0.65872,0.93184 -1.25317,1.92795 -0.594453,0.98005 -1.108575,1.94403 -0.514122,0.96397 -0.883647,1.73516 -0.08033,0.16066 -0.240995,0.44985 -0.144597,0.27313 -0.401657,0.78725 -0.240995,0.49806 -0.61052,1.28531 -0.353459,0.78725 -0.851515,1.99222 -0.481989,1.20497 -1.124641,2.87587 -0.642653,1.6709 -1.445968,3.92018 -0.144597,0.38559 -0.514122,0.62659 -0.353459,0.24099 -0.73905,0.24099 -0.835448,0 -1.237106,-0.44986 -0.385591,-0.44985 -0.385591,-1.10857 0,-0.2892 0.08033,-0.64265 z"
         style="font-family:'MV Boli';-inkscape-font-specification:'MV Boli'"
         id="path30728" />
      <path
         d="m 119.98913,114.42021 q 0,-0.56232 0.16067,-1.1889 0.54625,-2.18502 1.26924,-4.27364 0.73905,-2.10469 1.3335,-4.17724 0.59445,-2.07256 0.98004,-3.48639 0.40166,-1.429904 0.70692,-2.442088 0.30526,-1.028241 0.56232,-1.767289 0.25706,-0.73904 0.56232,-1.462033 0.1928,-0.433788 0.41773,-0.899711 0.24099,-0.465923 0.51412,-0.851514 0.27313,-0.401658 0.56232,-0.642653 0.30526,-0.257061 0.62659,-0.257061 0.65872,0 0.99611,0.224929 0.35346,0.208862 0.43379,0.385591 l 0.14459,0.658719 q 0.241,-0.01607 0.62659,-0.08033 0.38559,-0.08033 0.77118,-0.160663 0.40166,-0.08033 0.73905,-0.160663 0.3374,-0.08033 0.51413,-0.144597 1.06037,-0.289193 1.96009,-0.498055 0.89971,-0.208862 1.70302,-0.337393 0.81939,-0.144597 1.55844,-0.208862 0.73905,-0.06427 1.49416,-0.06427 0.73905,0 1.20498,0.08033 0.46592,0.08033 0.73905,0.224929 0.27312,0.12853 0.36952,0.321326 0.11247,0.176729 0.11247,0.385591 0,0.192796 -0.11247,0.417724 -0.0964,0.208862 -0.33739,0.401658 -0.241,0.192796 -0.62659,0.337393 -0.38559,0.144596 -0.96398,0.192795 -0.14459,0.03213 -0.67478,0.128531 -0.51412,0.08033 -1.12464,0.192792 -0.61052,0.0964 -1.15678,0.1928 -0.54625,0.0964 -0.75511,0.1446 h 0.0161 q -0.0964,0.0161 -0.46592,0.12853 -0.35346,0.0964 -0.86758,0.24099 -0.51412,0.12853 -1.12464,0.305257 -0.59446,0.17673 -1.18891,0.35346 -0.57839,0.16066 -1.07644,0.32133 -0.49806,0.14459 -0.80332,0.24099 -0.98004,0.385588 -1.54236,1.028238 -0.54626,0.626591 -0.86758,1.413845 -0.0643,0.1446 -0.1928,0.498064 -0.12853,0.33739 -0.28919,0.78724 -0.1446,0.43379 -0.32133,0.93185 -0.17673,0.49806 -0.33739,0.94791 -0.16066,0.44986 -0.28919,0.81938 -0.11247,0.36953 -0.16067,0.54626 -0.0482,0.16066 -0.0643,0.28919 -0.0161,0.12853 -0.0161,0.1928 0,0.0964 0.0482,0.0964 0.24099,0 0.99611,-0.20887 0.77118,-0.22492 1.78336,-0.54625 1.02824,-0.32133 2.18502,-0.69085 1.17284,-0.36953 2.23322,-0.69085 1.07644,-0.32133 1.91189,-0.53019 0.83544,-0.22493 1.20497,-0.22493 0.56232,0 0.75512,0.1928 0.19279,0.17673 0.19279,0.40165 0,0.57839 -0.41772,1.01218 -0.40166,0.43379 -1.01218,0.75512 -0.1928,0.0964 -0.72298,0.28919 -0.51413,0.17673 -1.12464,0.36953 -0.59446,0.19279 -1.14071,0.36952 -0.54626,0.17673 -0.78725,0.25706 -1.5745,0.61052 -2.57061,1.01218 -0.98005,0.38559 -1.59057,0.64265 -0.61052,0.241 -0.94791,0.36953 -0.32132,0.12853 -0.61052,0.22493 -0.27313,0.0803 -0.61052,0.16066 -0.33739,0.0803 -0.93184,0.22493 -0.1446,0.33739 -0.3374,1.02824 -0.19279,0.67479 -0.36952,1.41384 -0.17673,0.72298 -0.30526,1.34957 -0.11247,0.62658 -0.11247,0.86758 0,0.28919 0.0803,0.43379 0.0803,0.12853 0.19279,0.17673 0.11247,0.0482 0.22493,0.0482 0.11246,0 0.17673,0 0.77118,0 1.84763,-0.22493 1.0925,-0.22493 2.15288,-0.59446 1.01218,-0.35346 1.76729,-0.77118 0.75512,-0.41772 1.41384,-0.77118 0.67478,-0.36953 1.30137,-0.61052 0.64265,-0.25706 1.39777,-0.27313 0.16066,0 0.36952,0.0321 0.22493,0.0321 0.41773,0.12853 0.19279,0.0803 0.30526,0.22493 0.12853,0.1446 0.0964,0.36953 -0.0643,0.46592 -0.46593,0.91578 -0.40165,0.44985 -1.01217,0.86758 -0.61052,0.41772 -1.36564,0.80331 -0.75512,0.38559 -1.54237,0.73905 -0.78724,0.3374 -1.54236,0.62659 -0.75512,0.27313 -1.34957,0.48199 -1.4781,0.51412 -2.87587,0.75512 -1.39777,0.24099 -2.50634,0.24099 -1.22104,0 -1.87976,-0.46592 -0.64266,-0.44986 -0.64266,-1.51024 z"
         style="font-family:'MV Boli';-inkscape-font-specification:'MV Boli'"
         id="path30730" />
      <path
         d="m 139.61908,116.57494 q 0.91578,-3.67919 1.89582,-7.26198 0.98005,-3.59885 1.89583,-7.27803 0.11246,-0.48199 0.22493,-0.91579 0.11246,-0.43379 0.20886,-0.86758 0.0964,-0.433792 0.1446,-0.867582 0.0643,-0.44986 0.0643,-0.93185 0,-0.369534 -0.0482,-0.674794 -0.0482,-0.305258 -0.0482,-0.690849 0,-0.369525 0.0964,-0.787249 0.241,-0.980045 0.67479,-1.462034 0.44985,-0.48199 1.34957,-0.48199 0.36952,0 0.70691,0.08033 0.35346,0.06427 0.69086,0.160663 0.36952,0.112464 0.75511,0.192796 0.40166,0.08033 0.80332,0.08033 0.32132,0 0.62658,-0.03213 0.30526,-0.03213 0.69085,-0.06427 0.40166,-0.03213 0.93185,-0.06427 0.54625,-0.03213 1.36564,-0.03213 0.44985,0 1.06037,0.03213 0.61052,0.03213 1.26924,0.144597 0.65872,0.112464 1.33351,0.337392 0.67478,0.208862 1.25317,0.578388 0.59445,0.369525 1.04431,0.915779 0.44985,0.530188 0.67478,1.285307 0.11247,0.36953 0.1446,0.674784 0.0482,0.30526 0.0482,0.59446 0,0.980042 -0.49806,1.927962 -0.56232,1.07645 -1.5263,2.02436 -0.94791,0.93185 -2.21715,1.76729 -0.49805,0.3374 -1.15677,0.70692 -0.65872,0.35346 -1.30137,0.69085 -0.62659,0.32133 -1.14071,0.59446 -0.49806,0.27312 -0.69085,0.41772 0.56232,0.27313 1.12464,0.57839 0.56232,0.28919 1.14071,0.70692 0.59445,0.41772 1.1889,1.01217 0.61052,0.59446 1.25318,1.46204 0.65872,0.85151 1.34957,2.02435 0.70691,1.17284 1.46203,2.76341 0.1928,0.38559 0.1928,0.81938 0,0.33739 -0.1446,0.67478 -0.12853,0.3374 -0.36953,0.61052 -0.22492,0.27313 -0.54625,0.44986 -0.32133,0.16066 -0.69085,0.16066 -0.56232,0 -0.93185,-0.41772 -0.36952,-0.41772 -0.70691,-1.09251 -0.3374,-0.67478 -0.70692,-1.5263 -0.35346,-0.85151 -0.88365,-1.71909 -0.57839,-0.93185 -1.2853,-1.7673 -0.69086,-0.83545 -1.4781,-1.44597 -0.78725,-0.61052 -1.6227,-0.96397 -0.83545,-0.36953 -1.6709,-0.36953 h -0.24099 q -0.49806,0 -0.89972,0.0964 -0.38559,0.0803 -0.75511,0.1446 -0.49806,-0.17673 -0.72299,-0.57839 -0.22492,-0.40166 -0.22492,-0.89972 v -0.22492 l -1.28531,5.06088 q -0.0643,0.241 -0.17673,0.65872 -0.11246,0.41773 -0.25706,0.91578 -0.1446,0.49806 -0.30526,1.04431 -0.1446,0.54626 -0.28919,1.02825 -0.12853,0.48199 -0.241,0.86758 -0.0964,0.38559 -0.14459,0.57838 -0.22493,0.40166 -0.57839,0.62659 -0.33739,0.24099 -0.73905,0.24099 -0.70692,0 -0.98005,-0.41772 -0.27312,-0.43379 -0.27312,-0.99611 0,-0.22493 0.0321,-0.44986 0.0321,-0.24099 0.0803,-0.44985 z m 7.88856,-18.122812 q -0.0964,0.32133 -0.2892,0.93185 -0.17673,0.61051 -0.40165,1.381702 -0.22493,0.77119 -0.48199,1.65484 -0.25706,0.88364 -0.51412,1.78336 -0.25707,0.88364 -0.49806,1.71909 -0.24099,0.83545 -0.43379,1.49417 0.32133,-0.41772 0.96398,-0.73905 0.64265,-0.33739 1.44597,-0.62659 0.62658,-0.22492 1.54236,-0.62658 0.91578,-0.41773 1.91189,-0.94791 1.01218,-0.53019 2.00829,-1.14071 1.01218,-0.62659 1.79943,-1.26924 0.80331,-0.65872 1.30137,-1.30138 0.49805,-0.65872 0.49805,-1.269242 0,-0.59445 -0.41772,-0.93185 -0.41772,-0.353464 -1.04431,-0.530194 -0.62659,-0.17673 -1.3817,-0.22493 -0.73905,-0.0643 -1.38171,-0.0643 -1.15677,0 -2.31354,0.1446 -1.15678,0.1446 -2.31355,0.562334 z"
         style="font-family:'MV Boli';-inkscape-font-specification:'MV Boli'"
         id="path30732" />
      <path
         d="m 170.07704,122.08114 q 0,-0.3856 0.1928,-0.78725 0.20886,-0.38559 0.54625,-0.81938 0.35346,-0.41773 0.80332,-0.88365 0.46592,-0.46592 0.96398,-0.98005 0.94791,-0.96398 1.99222,-2.00829 1.04431,-1.04431 1.99222,-2.15288 0.40166,-0.48199 0.64265,-0.78725 0.241,-0.30526 0.35346,-0.49806 0.12853,-0.20886 0.16066,-0.35345 0.0482,-0.1446 0.0643,-0.2892 -0.67478,-0.86758 -1.20497,-1.87976 -0.51412,-1.01217 -0.93185,-2.10468 -0.40166,-1.10858 -0.73905,-2.23322 -0.32133,-1.12464 -0.61052,-2.20108 -0.27313,-0.98005 -0.53019,-1.97616 -0.24099,-0.99611 -0.64265,-1.71909 -0.30526,-0.546263 -0.53019,-1.124653 -0.20886,-0.59446 -0.20886,-1.30137 0,-0.305262 0.0643,-0.706932 0.0803,-0.417723 0.25706,-0.771182 0.19279,-0.353459 0.48199,-0.594453 0.30526,-0.257061 0.73905,-0.257061 0.46592,0 0.86758,0.321326 0.40165,0.321326 0.72298,0.819382 0.32133,0.481988 0.54626,1.06039 0.22492,0.56232 0.35345,1.04431 0.16067,0.69085 0.3856,1.719103 0.24099,1.02824 0.46592,2.10468 0.24099,1.07645 0.46592,2.04042 0.22493,0.96398 0.40166,1.54237 0.20886,0.72298 0.44986,1.36564 0.24099,0.62658 0.48198,1.09251 0.241,0.44985 0.46593,0.72298 0.24099,0.25706 0.44985,0.25706 0.16067,0 0.49806,-0.43379 1.31744,-1.75123 2.73127,-3.74345 1.4299,-2.00829 2.77947,-3.96838 0.49806,-0.72298 0.88365,-1.3335 0.38559,-0.610523 0.69085,-1.156783 0.32133,-0.56232 0.57839,-1.07644 0.25706,-0.530202 0.48199,-1.060391 l 0.41772,-1.686962 q 0.0643,-0.257061 0.20886,-0.514122 0.16067,-0.273128 0.35346,-0.48199 0.20887,-0.224928 0.46593,-0.353458 0.27312,-0.144597 0.59445,-0.144597 0.41772,0 0.72298,0.176729 0.30526,0.160663 0.49806,0.433791 0.1928,0.273127 0.28919,0.642652 0.0964,0.353459 0.0964,0.73905 0,0.43379 -0.17673,0.996111 -0.16066,0.562315 -0.43379,1.156787 -0.27313,0.59445 -0.61052,1.17284 -0.33739,0.57839 -0.65872,1.044313 -2.29748,3.27753 -4.67529,6.65146 -2.36175,3.35785 -4.80383,6.44259 -2.16895,2.74733 -4.25757,5.09302 -2.07256,2.34568 -3.79165,4.0969 -0.36953,0.36953 -0.83545,0.69086 -0.46592,0.32132 -0.98004,0.32132 -0.27313,0 -0.46593,-0.12853 -0.17673,-0.11246 -0.28919,-0.30526 -0.11246,-0.19279 -0.17673,-0.44985 -0.0482,-0.241 -0.0482,-0.48199 z"
         style="font-family:'MV Boli';-inkscape-font-specification:'MV Boli'"
         id="path30734" />
    </g>
    <path
       style="fill:#cc4743;fill-opacity:0.26506;stroke:none;stroke-width:16.6882;stroke-linejoin:bevel;stroke-opacity:1;paint-order:stroke fill markers"
       d="m 614.03886,519.21276 c 0,-0.46953 6.08246,-4.74994 13.51658,-9.51202 7.43412,-4.76208 14.36776,-9.88109 15.40809,-11.37559 1.04034,-1.4945 1.90926,-10.53757 1.93094,-20.09572 0.0447,-19.68984 1.87122,-22.51488 22.93815,-35.47749 13.54276,-8.33295 15.63198,-13.53356 15.69174,-39.06078 l 0.0283,-12.10455 17.66498,-11.42742 17.66498,-11.42742 1.82135,-20.87965 1.82136,-20.87965 h 8.83412 8.83411 v 39.69136 39.69135 l -6.64399,4.83981 c -5.93944,4.32658 -6.79651,7.06479 -8.0821,25.82115 l -1.43809,20.98132 -17.66377,11.74562 c -16.57715,11.02306 -17.66552,12.33829 -17.69211,21.3798 -0.0157,5.2988 -0.74646,13.97879 -1.62416,19.28888 l -1.59582,9.6547 H 649.7462 c -19.63904,0 -35.70734,-0.38417 -35.70734,-0.8537 z"
       id="path8999"
       transform="scale(0.26458333)" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
  <script
     id="hatch_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=(t,e,r,n)=&gt;{const u=(e-t)/2,i=r+u,s=t+u+n;let h=[];for(let t=r-(Math.round(i/n)+1)*n;t&lt;s;t+=n)h.push(t);return h};class r{constructor(t,e){this.x=t,this.y=e}toString(){return`${this.x} ${this.y}`}isPoint(){return!0}clone(){return new r(this.x,this.y)}add(t){return new r(this.x+t.x,this.y+t.y)}distSquared(t){let e=this.x-t.x,r=this.y-t.y;return e*e+r*r}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((n,u)=&gt;{let i=n.getAttribute(&quot;id&quot;);i||(i=&quot;hatch_shape_&quot;+u,n.setAttribute(&quot;id&quot;,i));const s=(n.getAttribute(&quot;fill&quot;)||n.style.fill).match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(s&amp;&amp;s[1]){const u=document.getElementById(s[1]);if(u&amp;&amp;&quot;hatch&quot;===u.nodeName){const i=u.getAttributeNS(&quot;http://www.w3.org/1999/xlink&quot;,&quot;href&quot;);if(null!==i&amp;&amp;&quot;&quot;!==i&amp;&amp;((t,e)=&gt;{const r=[&quot;x&quot;,&quot;y&quot;,&quot;pitch&quot;,&quot;rotate&quot;,&quot;hatchUnits&quot;,&quot;hatchContentUnits&quot;,&quot;transform&quot;],n=document.getElementById(e.slice(1));n&amp;&amp;&quot;hatch&quot;===n.nodeName&amp;&amp;(r.forEach(e=&gt;{let r=n.getAttribute(e);null===t.getAttribute(e)&amp;&amp;null!==r&amp;&amp;t.setAttribute(e,r)}),0===t.children.length&amp;&amp;Array.from(n.children).forEach(e=&gt;{t.appendChild(e.cloneNode(!0))}))})(u,i),0===u.children.length)return;const h=n.getBBox(),o=Math.ceil(Math.sqrt(h.width*h.width+h.height*h.height)),a=u.getAttribute(&quot;hatchUnits&quot;)||&quot;objectBoundingBox&quot;,c=u.getAttribute(&quot;hatchContentUnits&quot;)||&quot;userSpaceOnUse&quot;,b=Number(u.getAttribute(&quot;rotate&quot;))||0,l=u.getAttribute(&quot;transform&quot;)||u.getAttribute(&quot;hatchTransform&quot;)||&quot;&quot;,m=(t=&gt;{const e=[];return t.forEach(t=&gt;e.push(t)),e.sort((t,e)=&gt;Number(e.getAttribute(&quot;offset&quot;))-Number(t.getAttribute(&quot;offset&quot;)))})(u.querySelectorAll(&quot;hatchpath,hatchPath&quot;)),d=&quot;objectBoundingBox&quot;===a?Number(u.getAttribute(&quot;x&quot;))*h.width||0:Number(u.getAttribute(&quot;x&quot;))||0,g=&quot;objectBoundingBox&quot;===a?Number(u.getAttribute(&quot;y&quot;))*h.width||0:Number(u.getAttribute(&quot;y&quot;))||0;let p=&quot;objectBoundingBox&quot;===a?Number(u.getAttribute(&quot;pitch&quot;))*h.width||0:Number(u.getAttribute(&quot;pitch&quot;))||0;if(&quot;objectBoundingBox&quot;===c&amp;&amp;h.height&amp;&amp;(p/=h.height),p&lt;=0)return void console.error(&quot;Non-positive pitch&quot;);const N=document.createElementNS(t,&quot;pattern&quot;),f=`${s[1]}_pattern`;let w=h.width-h.width%p,A=0;const y=e(w,o,d,p);m.forEach(n=&gt;{let u=Number(n.getAttribute(&quot;offset&quot;))||0;u=u&gt;p?u%p:u;const i=y.map(t=&gt;t+u),s=document.createElementNS(t,&quot;path&quot;);let a=&quot;&quot;;for(let t=0;t&lt;n.attributes.length;++t){const e=n.attributes.item(t);&quot;d&quot;!==e.name&amp;&amp;s.setAttribute(e.name,e.value)}if(null===n.getAttribute(&quot;d&quot;))a+=i.reduce((t,e)=&gt;`${t}M ${e} ${g} V ${o} `,&quot;&quot;),A=o;else{const u=n.getAttribute(&quot;d&quot;),c=(t=&gt;{let e=[],n=0,u=t.length,i=0;for(;n&lt;u;)switch(t[n].toUpperCase()){case&quot;Z&quot;:e.push(t[n]),n+=1,i=0;break;case&quot;M&quot;:case&quot;L&quot;:case&quot;T&quot;:e.push(t[n],new r(Number(t[n+1]),Number(t[n+2]))),n+=3,i=1;break;case&quot;H&quot;:e.push(t[n],new r(Number(t[n+1]),null)),n+=2,i=2;break;case&quot;V&quot;:e.push(t[n],new r(null,Number(t[n+1]))),n+=2,i=3;break;case&quot;C&quot;:e.push(t[n],new r(Number(t[n+1]),Number(t[n+2])),new r(Number(t[n+3]),Number(t[n+4])),new r(Number(t[n+5]),Number(t[n+6]))),n+=7,i=4;break;case&quot;S&quot;:case&quot;Q&quot;:e.push(t[n],new r(Number(t[n+1]),Number(t[n+2])),new r(Number(t[n+3]),Number(t[n+4]))),n+=5,i=5;break;case&quot;A&quot;:e.push(t[n],t[n+1],t[n+2],t[n+3],t[n+4],t[n+5],new r(Number(t[n+6]),Number(t[n+7]))),n+=8,i=6;break;case&quot;B&quot;:e.push(t[n],t[n+1]),n+=2,i=7;break;default:switch(i){case 1:e.push(new r(Number(t[n]),Number(t[n+1]))),n+=2;break;case 2:e.push(new r(Number(t[n]),null)),n+=1;break;case 3:e.push(new r(null,Number(t[n]))),n+=1;break;case 4:e.push(new r(Number(t[n]),Number(t[n+1])),new r(Number(t[n+2]),Number(t[n+3])),new r(Number(t[n+4]),Number(t[n+5]))),n+=6;break;case 5:e.push(new r(Number(t[n]),Number(t[n+1])),new r(Number(t[n+2]),Number(t[n+3]))),n+=4;break;case 6:e.push(t[n],t[n+1],t[n+2],t[n+3],t[n+4],new r(Number(t[n+5]),Number(t[n+6]))),n+=7;break;default:e.push(t[n]),n+=1}}return e})(u.match(/([+-]?(\d+(\.\d+)?))|[MmZzLlHhVvCcSsQqTtAaBb]/g)),b=c.length,l=&quot;M&quot;===c[0],m=c[0].toLowerCase()===c[0],d=new r(0,0);let p=(e=&gt;{const r=document.createElementNS(t,&quot;path&quot;);let n=e.getAttribute(&quot;d&quot;);return&quot;M&quot;!==n[0].toUpperCase()&amp;&amp;(n=`M 0,0 ${n}`),r.setAttribute(&quot;d&quot;,n),r.getPointAtLength(r.getTotalLength()).y-r.getPointAtLength(0).y})(n);if(void 0!==c[b-1].y&amp;&amp;p&lt;c[b-1].y&amp;&amp;(p=c[b-1].y),p&lt;=0)return void console.error(&quot;y offset is non-positive&quot;);A=h.height-h.height%p;const N=e(A,o,g,p);i.forEach(t=&gt;{d.x=t,l||m||(a+=`M ${t} 0`),N.forEach(e=&gt;{d.y=e,a+=m?`M ${t} ${e} ${u}`:c.map(t=&gt;t.isPoint&amp;&amp;t.isPoint()?t.add(d):t).map(t=&gt;t.isPoint&amp;&amp;t.isPoint()?t.toString():t).reduce((t,e)=&gt;`${t} ${e}`,&quot;&quot;)})}),s.style.fill=&quot;none&quot;}s.setAttribute(&quot;d&quot;,a),N.appendChild(s)}),((t,e)=&gt;{for(let r in e)t.setAttribute(r,e[r])})(N,{id:f,patternUnits:&quot;userSpaceOnUse&quot;,patternContentUnits:c,width:w,height:A,x:h.x,y:h.y,patternTransform:`rotate(${b} 0 0) ${l}`}),u.parentElement.insertBefore(N,u),n.style.fill=`url(#${f})`,n.setAttribute(&quot;fill&quot;,`url(#${f})`)}}})}();
</script>
</svg>
